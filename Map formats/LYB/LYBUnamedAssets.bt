//------------------------------------------------
//--- 010 Editor v12.0beta1 Binary Template
//      File: LYBAssets.bt
//   Authors: Joschka
//   Version: 0.1
//   Purpose: Helper structs for lyb parsing
//  Category: Game file
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

#ifndef LYB_UN_ASSETS
#define LYB_UN_ASSETS

typedef struct VECTOR3 {
    float x<name="x">;
    float y<name="y">;
    float z<name="z">;
} Vector3;

typedef struct LUT_s
{
    byte LUTTexture[16384]<name="LUT", bgcolor=cDkGreen>;
}LUT_t;

typedef struct LaySettingsObjectExtraInfo_s(int rStart)
{
    uint32 unk0[3];
    Assert(!(unk0[0] + unk0[1] + unk0[2]));
    uint32 unk1;
    uint32 unk2[6];
    Assert(!(unk2[0] + unk2[1] + unk2[2] + unk2[3] + unk2[4] + unk2[5]));

    uint32 occlusionOffset<name="Occlusion section offset">;
    uint32 occlusionCount<name="Occlusion entry count">;

    uint32 unk3[4];
    Assert(!(unk3[0] + unk3[1] + unk3[2] + unk3[3]));

    uint32 LUTSectionOffset<name="LUT section offset">;
    uint32 LUTCount<name="LUT entry count">;

    FSeek(rStart + LUTSectionOffset);
    uint64 LUTOffsets[LUTCount];
    local int i<hidden=true>;
    for(i = 0; i < LUTCount; i++)
    {
        FSeek(rStart + LUTOffsets[i]);
        LUT_t lut;
    }
    
}LaySettingsObjectExtraInfo_t;



#endif // LYB_UN_ASSETS
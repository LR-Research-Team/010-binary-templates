//BaseObjects/ScreenEnv/ScreenEnvBaseObject

typedef struct BaseObjects_ScreenEnv_ScreenEnvBaseObject_Field0_s(int rStart)
{
    uint Ref0;
    local int tmp<hidden=true> = FTell();
    FSeek(Ref0 + rStart);
    uint Ref0_0;
    FSeek(Ref0_0 + rStart);
    uint Data0;
    uint Data1[0x11];
    FSeek(tmp);
    //Checks
    Assert(Ref0);
    //Assert(Data0 == 0xFA43);
    local int i<hidden=true> = 0;
    for(i=0; i < 0x11; i++)
    {
       //Assert(Data1[i] == 0);        
    }        
}BaseObjects_ScreenEnv_ScreenEnvBaseObject_Field0_t<bgcolor=cRed>;

typedef struct BaseObjects_ScreenEnv_ScreenEnvBaseObject_Field1_0_s
{
    uint AssetOffset;
    uint AssetID;    
}BaseObjects_ScreenEnv_ScreenEnvBaseObject_Field1_0_t<bgcolor=cRed>;

typedef struct BaseObjects_ScreenEnv_ScreenEnvBaseObject_Field1_s(int rStart)
{
    uint Ref0;
    local int tmp<hidden=true> = FTell();
    FSeek(Ref0 + rStart);
    uint Ref0_0;
    uint entryCount;
    FSeek(Ref0_0 + rStart);
    BaseObjects_ScreenEnv_ScreenEnvBaseObject_Field1_0_t AssetsTable[entryCount]<optimize=false>;
    FSeek(tmp);
    
}BaseObjects_ScreenEnv_ScreenEnvBaseObject_Field1_t<bgcolor=cRed>;

typedef struct BaseObjects_ScreenEnv_ScreenEnvBaseObject_s(int rStart, int assetSize)
{
    uint flagsMaybe; //Seems to determine presence of some fields?
    uint unk0;
    BaseObjects_ScreenEnv_ScreenEnvBaseObject_Field0_t field0(rStart);
    uint reserved0; //Apparently supposed to be offset to other asset
    uint GlareObjectOffset;
    uint reserved1; //Apparently supposed to be offset to other asset
    uint ShadowObjectOffset;
    uint ColorCorrectionObjectOffset;
    uint BlurObjectOffset;
    uint VolumericLightObjectOffset;
    uint FogObjectOffset;
    uint reserved2[4]; //Apparently supposed to be offsets to other assets
    BaseObjects_ScreenEnv_ScreenEnvBaseObject_Field1_t field1(rStart);
    uint SiColorCorrectioObjectOffset;
    uint AtmosphericPerspectiveObjectOffset; 
    
    uint OTAOS0;
    uint OTAOS0;
    uint OTAOS0;
    uint OTAOS0;
    uint OTAOS0;
    uint OTAOS0;
    uint OTAOS0;
    
    /*if(assetSize == 0x6C) //XIII-2
        uint reserved3[5];
    else //LR
        uint reserved3[7];*/
        
    //Checks    
    Assert(reserved0 == 0);
    Assert(reserved1 == 0);
    local int i<hidden=true> = 0;
    for(i=0; i < 0x4; i++)
    {
         Assert(reserved2[i] == 0);
    }
    for(i=0; i < 0x5; i++)
    {
         //Assert(reserved3[i] == 0);
    }
        
}BaseObjects_ScreenEnv_ScreenEnvBaseObject_t<bgcolor=cRed>;